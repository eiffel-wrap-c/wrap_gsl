note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GSL_RAN_DISCRETE_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	k: INTEGER
			-- Access member `K`
		require
			exists: exists
		do
			Result := c_k (item)
		ensure
			result_correct: Result = c_k (item)
		end

	set_k (a_value: INTEGER) 
			-- Change the value of member `K` to `a_value`.
		require
			exists: exists
		do
			set_c_k (item, a_value)
		ensure
			k_set: a_value = k
		end

	a: POINTER
			-- Access member `A`
		require
			exists: exists
		do
			Result := c_a (item)
		ensure
			result_correct: Result = c_a (item)
		end

	set_a (a_value: POINTER) 
			-- Change the value of member `A` to `a_value`.
		require
			exists: exists
		do
			set_c_a (item, a_value)
		ensure
			a_set: a_value = a
		end

	f: POINTER
			-- Access member `F`
		require
			exists: exists
		do
			Result := c_f (item)
		ensure
			result_correct: Result = c_f (item)
		end

	set_f (a_value: POINTER) 
			-- Change the value of member `F` to `a_value`.
		require
			exists: exists
		do
			set_c_f (item, a_value)
		ensure
			f_set: a_value = f
		end

feature {NONE} -- Implementation wrapper for struct gsl_ran_discrete_t

	sizeof_external: INTEGER 
		external
			"C inline use <eif_gsl.h>"
		alias
			"sizeof(gsl_ran_discrete_t)"
		end

	c_k (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->K
			]"
		end

	set_c_k (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->K =  (size_t)$a_value
			]"
		ensure
			k_set: a_value = c_k (an_item)
		end

	c_a (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->A
			]"
		end

	set_c_a (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->A =  (size_t*)$a_value
			]"
		ensure
			a_set: a_value = c_a (an_item)
		end

	c_f (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->F
			]"
		end

	set_c_f (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				((gsl_ran_discrete_t*)$an_item)->F =  (double*)$a_value
			]"
		ensure
			f_set: a_value = c_f (an_item)
		end

end
