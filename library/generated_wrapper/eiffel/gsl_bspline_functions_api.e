note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class GSL_BSPLINE_FUNCTIONS_API


feature -- Access

	gsl_bspline_alloc (k: INTEGER; nbreak: INTEGER): POINTER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_alloc ((size_t const)$k, (size_t const)$nbreak);
			]"
		end

	gsl_bspline_free (w: GSL_BSPLINE_WORKSPACE_STRUCT_API) 
		do
			c_gsl_bspline_free (w.item)
		end

	gsl_bspline_ncoeffs (w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_ncoeffs (w.item)
		end

	gsl_bspline_order (w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_order (w.item)
		end

	gsl_bspline_nbreak (w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_nbreak (w.item)
		end

	gsl_bspline_breakpoint (i: INTEGER; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): REAL_64 
		do
			Result := c_gsl_bspline_breakpoint (i, w.item)
		end

	gsl_bspline_greville_abscissa (i: INTEGER; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): REAL_64 
		do
			Result := c_gsl_bspline_greville_abscissa (i, w.item)
		end

	gsl_bspline_knots (breakpts: GSL_VECTOR_STRUCT_API; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_knots (breakpts.item, w.item)
		end

	gsl_bspline_knots_uniform (a: REAL_64; b: REAL_64; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_knots_uniform (a, b, w.item)
		end

	gsl_bspline_knots_greville (abscissae: GSL_VECTOR_STRUCT_API; w: GSL_BSPLINE_WORKSPACE_STRUCT_API; abserr: POINTER): INTEGER 
		do
			Result := c_gsl_bspline_knots_greville (abscissae.item, w.item, abserr)
		end

	gsl_bspline_eval (x: REAL_64; b: GSL_VECTOR_STRUCT_API; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_eval (x, b.item, w.item)
		end

	gsl_bspline_eval_nonzero (x: REAL_64; bk: GSL_VECTOR_STRUCT_API; istart: POINTER; iend: POINTER; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_eval_nonzero (x, bk.item, istart, iend, w.item)
		end

	gsl_bspline_deriv_eval (x: REAL_64; nderiv: INTEGER; db: GSL_MATRIX_STRUCT_API; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_deriv_eval (x, nderiv, db.item, w.item)
		end

	gsl_bspline_deriv_eval_nonzero (x: REAL_64; nderiv: INTEGER; db: GSL_MATRIX_STRUCT_API; istart: POINTER; iend: POINTER; w: GSL_BSPLINE_WORKSPACE_STRUCT_API): INTEGER 
		do
			Result := c_gsl_bspline_deriv_eval_nonzero (x, nderiv, db.item, istart, iend, w.item)
		end

feature -- Externals

	c_gsl_bspline_free (w: POINTER)
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				gsl_bspline_free ((gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_ncoeffs (w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_ncoeffs ((gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_order (w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_order ((gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_nbreak (w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_nbreak ((gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_breakpoint (i: INTEGER; w: POINTER): REAL_64
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_breakpoint ((size_t)$i, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_greville_abscissa (i: INTEGER; w: POINTER): REAL_64
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_greville_abscissa ((size_t)$i, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_knots (breakpts: POINTER; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_knots ((gsl_vector const*)$breakpts, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_knots_uniform (a: REAL_64; b: REAL_64; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_knots_uniform ((double const)$a, (double const)$b, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_knots_greville (abscissae: POINTER; w: POINTER; abserr: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_knots_greville ((gsl_vector const*)$abscissae, (gsl_bspline_workspace*)$w, (double*)$abserr);
			]"
		end

	c_gsl_bspline_eval (x: REAL_64; b: POINTER; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_eval ((double const)$x, (gsl_vector*)$b, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_eval_nonzero (x: REAL_64; bk: POINTER; istart: POINTER; iend: POINTER; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_eval_nonzero ((double const)$x, (gsl_vector*)$bk, (size_t*)$istart, (size_t*)$iend, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_deriv_eval (x: REAL_64; nderiv: INTEGER; db: POINTER; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_deriv_eval ((double const)$x, (size_t const)$nderiv, (gsl_matrix*)$db, (gsl_bspline_workspace*)$w);
			]"
		end

	c_gsl_bspline_deriv_eval_nonzero (x: REAL_64; nderiv: INTEGER; db: POINTER; istart: POINTER; iend: POINTER; w: POINTER): INTEGER
		external
			"C inline use <eif_gsl.h>"
		alias
			"[
				return gsl_bspline_deriv_eval_nonzero ((double const)$x, (size_t const)$nderiv, (gsl_matrix*)$db, (size_t*)$istart, (size_t*)$iend, (gsl_bspline_workspace*)$w);
			]"
		end

feature -- Externals Address

end
